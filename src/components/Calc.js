import React, { useState } from 'react';
import { Button } from '@react95/core';

const Calculator = () => {
  const [weight, setWeight] = useState('');
  const [reps, setReps] = useState('');
  const [bodyWeight, setBodyWeight] = useState('');
  const [height, setHeight] = useState('');
  const [age, setAge] = useState(''); // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞
  const [gender, setGender] = useState(''); // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª–∞
  const [activityLevel, setActivityLevel] = useState(''); // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const [result, setResult] = useState(null);
  const [proteinResult, setProteinResult] = useState(null);
  const [bmiResult, setBmiResult] = useState(null);
  const [bmiCategory, setBmiCategory] = useState('');
  const [bmr, setBMR] = useState(null); // –†–µ–∑—É–ª—å—Ç–∞—Ç BMR
  const [tdee, setTDEE] = useState(null); // –†–µ–∑—É–ª—å—Ç–∞—Ç TDEE

  const [show1RM, setShow1RM] = useState(false);
  const [showProtein, setShowProtein] = useState(false);
  const [showBMI, setShowBMI] = useState(false);
  const [showCalories, setShowCalories] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π

  const calculate1RM = () => {
    const weightNum = parseFloat(weight);
    const repsNum = parseInt(reps, 10);

    if (!isNaN(weightNum) && !isNaN(repsNum) && repsNum > 0) {
      const oneRM = (weightNum * repsNum * 0.0333) + weightNum;
      setResult(oneRM.toFixed(2));
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤–µ—Å–∞ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.');
    }
  };

  const calculateProteinIntake = () => {
    const bodyWeightNum = parseFloat(bodyWeight);

    if (!isNaN(bodyWeightNum) && bodyWeightNum > 0) {
      const minProtein = (1.6 * bodyWeightNum).toFixed(2);
      const maxProtein = (2.2 * bodyWeightNum).toFixed(2);
      setProteinResult({ min: minProtein, max: maxProtein });
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –º–∞—Å—Å—ã —Ç–µ–ª–∞.');
    }
  };

  const calculateBMI = () => {
    const bodyWeightNum = parseFloat(bodyWeight);
    const heightNum = parseFloat(height) / 100;

    if (!isNaN(bodyWeightNum) && bodyWeightNum > 0 && !isNaN(heightNum) && heightNum > 0) {
      const bmi = bodyWeightNum / (heightNum * heightNum);
      setBmiResult(bmi.toFixed(2));

      if (bmi < 18.5) {
        setBmiCategory('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞');
      } else if (bmi >= 18.5 && bmi < 25) {
        setBmiCategory('–ù–æ—Ä–º–∞–ª—å–Ω–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞');
      } else if (bmi >= 25 && bmi < 30) {
        setBmiCategory('–ò–∑–±—ã—Ç–æ—á–Ω–∞—è –º–∞—Å—Å–∞ —Ç–µ–ª–∞ (–æ–∂–∏—Ä–µ–Ω–∏–µ I —Å—Ç–µ–ø–µ–Ω–∏)');
      } else if (bmi >= 30 && bmi < 35) {
        setBmiCategory('–û–∂–∏—Ä–µ–Ω–∏–µ II —Å—Ç–µ–ø–µ–Ω–∏');
      } else {
        setBmiCategory('–û–∂–∏—Ä–µ–Ω–∏–µ III —Å—Ç–µ–ø–µ–Ω–∏ (–º–æ—Ä–±–∏–¥–Ω–æ–µ –æ–∂–∏—Ä–µ–Ω–∏–µ)');
      }
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å—ã —Ç–µ–ª–∞ –∏ —Ä–æ—Å—Ç–∞.');
      setBmiResult(null);
      setBmiCategory('');
    }
  };

  const calculateBMRandTDEE = () => {
    const bodyWeightNum = parseFloat(bodyWeight);
    const heightNum = parseFloat(height) / 100; // –†–æ—Å—Ç –≤ –º–µ—Ç—Ä–∞—Ö
    const ageNum = parseInt(age, 10);
    const activityMultiplier = parseFloat(activityLevel);

    if (!isNaN(bodyWeightNum) && !isNaN(heightNum) && !isNaN(ageNum) && activityMultiplier > 0) {
      let bmr;
      if (gender === 'male') {
        bmr = 88.36 + (13.4 * bodyWeightNum) + (4.8 * heightNum * 100) - (5.7 * ageNum);
      } else if (gender === 'female') {
        bmr = 447.6 + (9.2 * bodyWeightNum) + (3.1 * heightNum * 100) - (4.3 * ageNum);
      } else {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª.');
        return;
      }

      const tdee = bmr * activityMultiplier;
      setBMR(bmr.toFixed(2));
      setTDEE(tdee.toFixed(2));
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤–µ—Å–∞, —Ä–æ—Å—Ç–∞, –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.');
    }
  };

  return (
    <div style={{ padding: '10px' }}>
      

      <div style={{ maxHeight: '350px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}>
        {/* –ò–∫–æ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ 1RM */}
        <div onClick={() => setShow1RM(!show1RM)} style={{ cursor: 'pointer', marginBottom: '10px' }}>
          {show1RM ? 'üîΩ –°–∫—Ä—ã—Ç—å —Ä–∞—Å—á–µ—Ç –∂–∏–º–∞ –Ω–∞ —Ä–∞–∑' : '‚ñ∂Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á–µ—Ç –∂–∏–º–∞ –Ω–∞ —Ä–∞–∑'}
        </div>
        {show1RM && (
          <div style={{ marginBottom: '20px' }}>
            <input
              type="number"
              value={weight}
              onChange={(e) => setWeight(e.target.value)}
              placeholder="–í–µ—Å (–∫–≥)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <input
              type="number"
              value={reps}
              onChange={(e) => setReps(e.target.value)}
              placeholder="–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <Button onClick={calculate1RM}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∂–∏–º –Ω–∞ —Ä–∞–∑</Button>

            {result !== null && (
              <div>
                <h4>–í–∞—à –∂–∏–º –Ω–∞ –æ–¥–Ω–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ: {result} –∫–≥</h4>
              </div>
            )}
          </div>
        )}

        {/* –ò–∫–æ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –±–µ–ª–∫–∞ */}
        <div onClick={() => setShowProtein(!showProtein)} style={{ cursor: 'pointer', marginBottom: '10px' }}>
          {showProtein ? 'üîΩ –°–∫—Ä—ã—Ç—å —Ä–∞—Å—á–µ—Ç –±–µ–ª–∫–∞' : '‚ñ∂Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á–µ—Ç –±–µ–ª–∫–∞'}
        </div>
        {showProtein && (
          <div style={{ marginBottom: '20px' }}>
            <input
              type="number"
              value={bodyWeight}
              onChange={(e) => setBodyWeight(e.target.value)}
              placeholder="–ú–∞—Å—Å–∞ —Ç–µ–ª–∞ (–∫–≥)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <Button onClick={calculateProteinIntake}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–µ–ª–æ–∫</Button>

            {proteinResult !== null && (
              <div>
                <h4>
                  –í–∞–º –Ω—É–∂–Ω–æ {proteinResult.min} - {proteinResult.max} –≥—Ä–∞–º–º –±–µ–ª–∫–∞ –≤ –¥–µ–Ω—å
                </h4>
              </div>
            )}
          </div>
        )}

        {/* –ò–∫–æ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –ò–ú–¢ */}
        <div onClick={() => setShowBMI(!showBMI)} style={{ cursor: 'pointer', marginBottom: '10px' }}>
          {showBMI ? 'üîΩ –°–∫—Ä—ã—Ç—å —Ä–∞—Å—á–µ—Ç –ò–ú–¢' : '‚ñ∂Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á–µ—Ç –ò–ú–¢'}
        </div>
        {showBMI && (
          <div style={{ marginBottom: '20px' }}>
            <input
              type="number"
              value={bodyWeight}
              onChange={(e) => setBodyWeight(e.target.value)}
              placeholder="–ú–∞—Å—Å–∞ —Ç–µ–ª–∞ (–∫–≥)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <input
              type="number"
              value={height}
              onChange={(e) => setHeight(e.target.value)}
              placeholder="–†–æ—Å—Ç (—Å–º)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <Button onClick={calculateBMI}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ò–ú–¢</Button>

            {bmiResult !== null && (
              <div>
                <h4>–í–∞—à –ò–ú–¢: {bmiResult}</h4>
                <h4>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {bmiCategory}</h4>
              </div>
            )}
          </div>
        )}

        {/* –ò–∫–æ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π */}
        <div onClick={() => setShowCalories(!showCalories)} style={{ cursor: 'pointer', marginBottom: '10px' }}>
          {showCalories ? 'üîΩ –°–∫—Ä—ã—Ç—å —Ä–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π' : '‚ñ∂Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π'}
        </div>
        {showCalories && (
          <div style={{ marginBottom: '20px' }}>
            <input
              type="number"
              value={bodyWeight}
              onChange={(e) => setBodyWeight(e.target.value)}
              placeholder="–ú–∞—Å—Å–∞ —Ç–µ–ª–∞ (–∫–≥)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <input
              type="number"
              value={height}
              onChange={(e) => setHeight(e.target.value)}
              placeholder="–†–æ—Å—Ç (—Å–º)"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <input
              type="number"
              value={age}
              onChange={(e) => setAge(e.target.value)}
              placeholder="–í–æ–∑—Ä–∞—Å—Ç"
              style={{ marginRight: '10px', marginBottom: '10px' }}
            />
            <select value={gender} onChange={(e) => setGender(e.target.value)} style={{ marginRight: '10px', marginBottom: '10px' }}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª</option>
              <option value="male">–ú—É–∂—á–∏–Ω–∞</option>
              <option value="female">–ñ–µ–Ω—â–∏–Ω–∞</option>
            </select>
            <select value={activityLevel} onChange={(e) => setActivityLevel(e.target.value)} style={{ marginRight: '10px', marginBottom: '10px' }}>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</option>
              <option value="1.2">–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏</option>
              <option value="1.375">–õ–µ–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
              <option value="1.55">–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
              <option value="1.725">–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
              <option value="1.9">–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
            </select>
            <Button onClick={calculateBMRandTDEE}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏</Button>

            {bmr !== null && (
              <div>
                <h4>–í–∞—à BMR (—Ä–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–ª–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä–æ–µ –≤–∞—à–µ —Ç–µ–ª–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∫–æ—è): {bmr} –∫–∞–ª–æ—Ä–∏–π –≤ –¥–µ–Ω—å</h4>
              </div>
            )}

            {tdee !== null && (
              <div>
                <h4>–í–∞—à TDEE (—Å—É—Ç–æ—á–Ω–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –∫–∞–ª–æ—Ä–∏—è—Ö —Å —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏): {tdee} –∫–∞–ª–æ—Ä–∏–π –≤ –¥–µ–Ω—å</h4>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default Calculator;
